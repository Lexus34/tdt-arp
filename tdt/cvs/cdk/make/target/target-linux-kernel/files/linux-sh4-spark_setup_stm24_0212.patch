--- a/arch/sh/kernel/setup.c	2011-01-05 10:45:31.000000000 +0100
+++ b/setup.c	2011-01-22 12:22:31.340928000 +0100
@@ -420,6 +420,34 @@
 #endif
 #endif
 
+ 	{
+ 	char org_command_line[] = "console=ttyAS1,115200 root=/dev/mtdblock6";
+ 	char tdt_command_line[] = "console=ttyAS0,115200 root=/dev/mtdblock6 rw rootfstype=jffs2 init=/bin/devinit coprocessor_mem=4m@0x40000000,4m@0x40400000 printk=1 stmmaceth=ethaddr:";
+ 	char mac[] = "00:00:00:00:00:00";
+ 	int command_line_len = strlen(command_line);
+ 	int org_command_line_len = strlen(org_command_line);
+ 
+ 	if(command_line_len >= org_command_line_len && !strncmp(command_line, org_command_line, org_command_line_len))
+ 	{
+ 		int i;
+ 		for(i = 0; i < (command_line_len - 7); i++)
+ 		{
+ 			if(!strncmp(command_line + i, "ethaddr", 7))
+ 			{
+ 				strlcpy(mac, command_line + i + 8, sizeof(mac));
+ 				break;
+ 			}
+ 			if(!strncmp(command_line + i, "hwaddr", 6))
+ 			{
+ 				strlcpy(mac, command_line + i + 7, sizeof(mac));
+ 				break;
+ 			}
+ 		}
+ 		strlcpy(command_line, tdt_command_line, sizeof(command_line));
+ 		strlcat(command_line, mac, sizeof(command_line));
+ 	}
+ 	}
+ 
 	/* Save unparsed command line copy for /proc/cmdline */
 	memcpy(boot_command_line, command_line, COMMAND_LINE_SIZE);
 	*cmdline_p = command_line;
--- linux-sh4/arch/sh/boards/mach-sat7111/setup.c.org	2012-08-16 01:06:39.204259849 +0200
+++ linux-sh4/arch/sh/boards/mach-sat7111/setup.c	2012-08-16 01:22:04.668291062 +0200
@@ -33,126 +33,128 @@
 #include <asm/irq-ilc.h>
 #include <asm/irl.h>
 #include <sound/stm.h>
+#include <linux/bpa2.h>
 
-#define SAT7111_PHY_RESET stm_gpio(2, 4)
+#define SAT7111_PHY_RESET stm_gpio(5, 3)
 
-/* The sat7111 board is populated with NOR, NAND, and Serial Flash.  The setup
- * below assumes the board is in its default boot-from-NOR configuration.  Other
- * boot configurations are possible but require board-level modifications to be
- * made, and equivalent changes to the setup here.  Note, only boot-from-NOR has
- * been fully tested.
- */
+const char *LMI_IO_partalias[] = { "v4l2-coded-video-buffers", "BPA2_Region1", "v4l2-video-buffers" ,
+                                    "coredisplay-video", "gfx-memory", "BPA2_Region0", "LMI_VID", NULL };
+
+ 
+#ifdef CONFIG_BPA2_DIRECTFBOPTIMIZED
+/*
+0x40000000 - 0x403FFFFF - cocpu 1 ram (4mb)
+0x40400000 - 0x407FFFFF - cocpu 2 ram (4mb)
+0x40800000 - 0x47FFFFFF - linux   (120mb) 
+0x47600000 - 0x483FFFFF - bigphys ( 14mb (0x00E00000))
+0x48400000 - 0x4FFFFFFF - lmi_io  ( 124mb (0x07C00000))
+*/
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+    {
+ 	    .name  = "LMI_IO",
+ 	    .start = 0x47600000,
+ 	    .size  = 0x07C00000, /* 124 Mb */
+ 	    .flags = 0,
+ 	    .aka   = LMI_IO_partalias
+    }, 
+    {
+ 	    .name  = "bigphysarea",
+ 	    .start = 0x4F200000,
+ 	    .size  = 0x00E00000, /* 14 Mb */
+ 	    .flags = 0,
+ 	    .aka   = NULL
+    }, 
+ };
+#else
+/*
+0x40000000 - 0x403FFFFF - cocpu 1 ram (4mb)
+0x40400000 - 0x407FFFFF - cocpu 2 ram (4mb)
+0x40800000 - 0x47FFFFFF - linux   (120mb)
+0x49800000 - 0x4aFFFFFF - bigphys ( 24mb)
+0x4b000000 - 0x4FFFFFFF - lmi_io  ( 80mb)
+*/
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+    {
+           .name  = "bigphysarea",
+           .start = 0x49800000,
+           .size  = 0x01800000, /* 24 Mb */
+           .flags = 0,
+           .aka   = NULL
+    },
+    {
+ 	    .name  = "LMI_IO",
+ 	    .start = 0x4b000000,
+ 	    .size  = 0x05000000, /* 80 Mb */
+ 	    .flags = 0,
+ 	    .aka   = LMI_IO_partalias
+    },
+};
+#endif
 
 static void __init sat7111_setup(char** cmdline_p)
 {
-	printk(KERN_INFO "STMicroelectronics sat7111 reference board initialisation\n");
+	printk(KERN_INFO "Spark-7111 board initialization\n");
 
 	stx7111_early_device_init();
 
 	stx7111_configure_asc(2, &(struct stx7111_asc_config) {
 			.hw_flow_control = 1,
 			.is_console = 1, });
-	stx7111_configure_asc(3, &(struct stx7111_asc_config) {
-			.hw_flow_control = 1,
-			.is_console = 0, });
+  	bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
 }
 
-
-
-static struct platform_device sat7111_leds = {
-	.name = "leds-gpio",
-	.id = -1,
-	.dev.platform_data = &(struct gpio_led_platform_data) {
-		.num_leds = 2,
-		.leds = (struct gpio_led[]) {
-			{
-				.name = "HB red",
-				.default_trigger = "heartbeat",
-				.gpio = stm_gpio(3, 5),
-			}, {
-				.name = "HB white",
-				.gpio = stm_gpio(3, 0),
-			},
-		},
-	},
-};
-
-
-
-static struct gpio_keys_button sat7111_buttons[] = {
-	{
-		.code = BTN_0,
-		.gpio = stm_gpio(6, 2),
-		.desc = "SW2",
-	}, {
-		.code = BTN_1,
-		.gpio = stm_gpio(6, 3),
-		.desc = "SW3",
-	}, {
-		.code = BTN_2,
-		.gpio = stm_gpio(6, 4),
-		.desc = "SW4",
-	}, {
-		.code = BTN_3,
-		.gpio = stm_gpio(6, 5),
-		.desc = "SW5",
-	},
-};
-
-static struct platform_device sat7111_button_device = {
-	.name = "gpio-keys",
-	.id = -1,
-	.num_resources = 0,
-	.dev.platform_data = &(struct gpio_keys_platform_data) {
-		.buttons = sat7111_buttons,
-		.nbuttons = ARRAY_SIZE(sat7111_buttons),
-	},
-};
-
 static struct platform_device sat7111_nor_flash = {
 	.name		= "physmap-flash",
 	.id		= -1,
 	.num_resources	= 1,
 	.resource	= (struct resource[]) {
-		STM_PLAT_RESOURCE_MEM(0, 32*1024*1024),
+		STM_PLAT_RESOURCE_MEM(0, 8*1024*1024),
 	},
 	.dev.platform_data = &(struct physmap_flash_data) {
 		.width		= 2,
 		.nr_parts	= 3,
 		.parts		=  (struct mtd_partition []) {
 			{
-				.name = "NOR Flash 1",
-				.size = 0x00080000,
+				.name   = "Boot firmware", 	//  (512K)
+				.size   = 0x00080000,
 				.offset = 0x00000000,
-			}, {
-				.name = "NOR Flash 2",
-				.size = 0x00200000,
-				.offset = MTDPART_OFS_NXTBLK,
-			}, {
-				.name = "NOR Flash 3",
-				.size = MTDPART_SIZ_FULL,
-				.offset = MTDPART_OFS_NXTBLK,
+			},
+			{
+				.name   = "Kernel",		//  (7MB)
+				.size   = 0x00700000,
+				.offset = 0x00080000,
+			},
+			{
+				.name   = "Reserve",		//  (512K)
+				.size   = MTDPART_SIZ_FULL,
+				.offset = 0x00780000,
 			},
 		},
-
-
 	},
 };
 
-struct stm_nand_bank_data sat7111_nand_flash = {
+struct stm_nand_bank_data sat7111_nand_data = {
 	.csn		= 1,
 	.options	= NAND_NO_AUTOINCR | NAND_USE_FLASH_BBT,
-	.nr_partitions	= 2,
+	.nr_partitions	= 4,
 	.partitions	= (struct mtd_partition []) {
-		{
-			.name	= "NAND Flash 1",
-			.offset	= 0,
-			.size 	= 0x00800000
-		}, {
-			.name	= "NAND Flash 2",
-			.offset = MTDPART_OFS_NXTBLK,
-			.size	= MTDPART_SIZ_FULL
-		},
+	     {
+		 .name = "Spark Kernel",
+		 .size = 0x0800000,
+		 .offset = 0,
+	     }, {
+		 .name = "Spark Rootfs",
+		 .size = 0x17800000,
+		 .offset = 0x800000,
+	     }, {
+		 .name = "E2 Kernel",
+		 .size = 0x800000,
+		 .offset = 0x18000000,
+	     }, {
+		 .name = "E2 RootFs",
+		 .size = 0x5000000,
+		 .offset = 0x18800000,
+	     },
 	},
 	.timing_data	= &(struct stm_nand_timing_data) {
 		.sig_setup	= 50,		/* times in ns */
@@ -167,28 +169,12 @@
 	},
 };
 
-/* Serial Flash */
-static struct spi_board_info sat7111_serial_flash = {
-	.modalias       = "m25p80",
-	.bus_num        = 0,
-	.chip_select    = stm_gpio(6, 7),
-	.max_speed_hz   = 7000000,
-	.mode           = SPI_MODE_3,
-	.platform_data  = &(struct flash_platform_data) {
-		.name = "m25p80",
-		.type = "m25p16",
-		.nr_parts	= 2,
-		.parts = (struct mtd_partition []) {
-			{
-				.name = "Serial Flash 1",
-				.size = 0x00080000,
-				.offset = 0,
-			}, {
-				.name = "Serial Flash 2",
-				.size = MTDPART_SIZ_FULL,
-				.offset = MTDPART_OFS_NXTBLK,
-			},
-		},
+static struct platform_device sat7111_nand_flash = {
+	.name		= "stm-nand-emi",
+	.dev.platform_data = &(struct stm_plat_nand_emi_data){
+		.nr_banks	= 1,
+		.banks		= &sat7111_nand_data,
+		.emi_rbn_gpio	= -1,
 	},
 };
 
@@ -209,22 +195,15 @@
 };
 
 static struct platform_device *sat7111_devices[] __initdata = {
-	&sat7111_leds,
 	&sat7111_nor_flash,
-	&sat7111_button_device,
+	&sat7111_nand_flash,
 };
 
 static int __init sat7111_devices_init(void)
 {
-	int peripherals_i2c_bus;
-
-	stx7111_configure_pwm(&(struct stx7111_pwm_config) {
-			.out0_enabled = 1,
-			.out1_enabled = 0, });
-
-	stx7111_configure_ssc_spi(0, NULL);
-	stx7111_configure_ssc_i2c(1, NULL); /* J12=1-2, J16=1-2 */
-	peripherals_i2c_bus = stx7111_configure_ssc_i2c(2, NULL);
+	stx7111_configure_ssc_i2c(0, NULL);
+	stx7111_configure_ssc_i2c(1, NULL);
+	stx7111_configure_ssc_i2c(2, NULL);
 	stx7111_configure_ssc_i2c(3, NULL);
 
 	stx7111_configure_usb(&(struct stx7111_usb_config) {
@@ -252,8 +231,6 @@
 			.banks = &sat7111_nand_flash,
 			.rbn.flex_connected = 1,});
 
-	spi_register_board_info(&sat7111_serial_flash, 1);
-
 	return platform_add_devices(sat7111_devices,
 				    ARRAY_SIZE(sat7111_devices));
 }
--- linux-sh4-2.6.32.46_stm24_0209.orig/drivers/net/stmmac/stmmac_mdio.c	2011-11-24 22:22:25.000000000 +0200
+++ linux-sh4/drivers/net/stmmac/stmmac_mdio.c	2011-11-24 23:33:55.732873713 +0200
@@ -194,12 +195,23 @@
 			 * and no PHY number was provided to the MAC,
 			 * use the one probed here.
 			 */
-			if ((priv->plat->bus_id == mdio_bus_data->bus_id) &&
-			    (priv->plat->phy_addr == -1))
+
+			act = 0;
+
+			if ((priv->plat->bus_id == mdio_bus_data->bus_id) && (/*(priv->plat->phy_addr == -1) ||*/
+					(phydev->phy_id == 0x0181b880) || // Davicom DM9161E
+					(phydev->phy_id == 0x0181b8a0) || // Davicom DM9161A
+					(phydev->phy_id == 0x00181b80) || // Davicom DM9131
+					(phydev->phy_id == 0x1c040011) || // STe100p
+					(phydev->phy_id == 0x00061c50) || // STe101p
+					(phydev->phy_id == 0x00008201) || //
+					(phydev->phy_id == 0x0007c0f1) || // Pingulux
+					(phydev->phy_id == 0x001cc912)))  // RTL821x
+			{
 				priv->plat->phy_addr = addr;
+				act=1;
+			}
 
-			act = (priv->plat->bus_id == mdio_bus_data->bus_id) &&
-				(priv->plat->phy_addr == addr);
 			switch (phydev->irq) {
 			case PHY_POLL:
 				irq_str = "POLL";
*** linux-sh4-2.6.32.46_stm24_0209.orig/drivers/net/stmmac/dwmac_lib.c	2011-11-24 22:22:25.000000000 +0200
--- linux-sh4/drivers/net/stmmac/dwmac_lib.c	2011-11-24 23:33:55.732873713 +0200
@@ -210,7 +210,7 @@
 	}
 	/* Optional hardware blocks, interrupts should be disabled */
 	if (unlikely(intr_status &
-		     (DMA_STATUS_GPI | DMA_STATUS_GMI | DMA_STATUS_GLI)))
+		     (DMA_STATUS_GPI | DMA_STATUS_GMI | DMA_STATUS_GLI)) && printk_ratelimit())
 		pr_info("%s: unexpected status %08x\n", __func__, intr_status);
 	/* Clear the interrupt by writing a logic 1 to the CSR5[15-0] */
 	writel((intr_status & 0x1ffff), ioaddr + DMA_STATUS);
diff -crp linux-sh4-2.6.32.59_stm24_0211/drivers/mtd/nand/nand_base.c linux-sh4-2.6.32.59_stm24_0211/drivers/mtd/nand/nand_base.c
*** linux-sh4-2.6.32.59_stm24_0211/drivers/mtd/nand/nand_base.c	2012-09-14 12:32:12.000000000 +0200
--- linux-sh4-2.6.32.59_stm24_0211/drivers/mtd/nand/nand_base.c	2012-09-14 13:22:11.000000000 +0200
*************** int nand_do_read_ops(struct mtd_info *mt
*** 1379,1398 ****
  
  			/* Now read the page into the buffer */
  			if (unlikely(ops->mode == MTD_OOB_RAW))
! 				ret = chip->ecc.read_page_raw(mtd, chip,
! 							      bufpoi, page);
! 			else if (!aligned && NAND_SUBPAGE_READ(chip) && !oob)
! 				ret = chip->ecc.read_subpage(mtd, chip, col, bytes, bufpoi);
  			else
! 				ret = chip->ecc.read_page(mtd, chip, bufpoi,
! 							  page);
  			if (ret < 0)
  				break;
  
  			/* Transfer not aligned data */
  			if (!aligned) {
! 				if (!NAND_SUBPAGE_READ(chip) && !oob)
! 					chip->pagebuf = realpage;
  				memcpy(buf, chip->buffers->databuf + col, bytes);
  			}
  
--- 1379,1393 ----
  
  			/* Now read the page into the buffer */
  			if (unlikely(ops->mode == MTD_OOB_RAW))
! 				ret = chip->ecc.read_page_raw(mtd, chip,bufpoi, page);
  			else
! 				ret = chip->ecc.read_page(mtd, chip, bufpoi, page);
  			if (ret < 0)
  				break;
  
  			/* Transfer not aligned data */
  			if (!aligned) {
! 				chip->pagebuf = realpage;
  				memcpy(buf, chip->buffers->databuf + col, bytes);
  			}
  
*************** static struct nand_flash_dev *nand_get_f
*** 2906,2913 ****
  	/* Decode ID string */
  	if (nand_decode_id(mtd, chip, type, id_data, 8) != 0) {
  		printk(KERN_INFO "Failed to decode NAND READID "
! 		       "[%02x %02x %02x %02x]\n",
! 		       id_data[0], id_data[1], id_data[2], id_data[3]);
  		return ERR_PTR(-EINVAL);
  	}
  
--- 2901,2908 ----
  	/* Decode ID string */
  	if (nand_decode_id(mtd, chip, type, id_data, 8) != 0) {
  		printk(KERN_INFO "Failed to decode NAND READID "
! 		       "[%02x %02x %02x %02x %02x]\n",
! 		       id_data[0], id_data[1], id_data[2], id_data[3], id_data[4] );
  		return ERR_PTR(-EINVAL);
  	}
  
diff -crp linux-sh4-2.6.32.59_stm24_0211/include/linux/dvb/frontend.h linux-sh4-2.6.32.59_stm24_0211.i2s/include/linux/dvb/frontend.h
*** linux-sh4-2.6.32.59_stm24_0211/include/linux/dvb/frontend.h	2011-08-09 09:35:36.000000000 +0800
--- linux-sh4-2.6.32.59_stm24_0211.i2s/include/linux/dvb/frontend.h	2011-12-07 11:02:08.856831910 +0800
*************** typedef enum fe_caps {
*** 62,67 ****
--- 62,69 ----
  	FE_CAN_8VSB			= 0x200000,
  	FE_CAN_16VSB			= 0x400000,
  	FE_HAS_EXTENDED_CAPS		= 0x800000,   /* We need more bitspace for newer APIs, indicate this. */
+ 	FE_CAN_MULTISTREAM		= 0x4000000,  /* frontend supports multistream filtering */
+ 	FE_CAN_TURBO_FEC		= 0x8000000,  /* frontend supports "turbo fec modulation" */
  	FE_CAN_2G_MODULATION		= 0x10000000, /* frontend supports "2nd generation modulation" (DVB-S2) */
  	FE_NEEDS_BENDING		= 0x20000000, /* not supported anymore, don't use (frontend requires frequency bending) */
  	FE_CAN_RECOVER			= 0x40000000, /* frontend can recover from a cable unplug automatically */
*************** typedef enum fe_transmit_mode {
*** 174,187 ****
  	TRANSMISSION_MODE_2K,
  	TRANSMISSION_MODE_8K,
  	TRANSMISSION_MODE_AUTO,
! 	TRANSMISSION_MODE_4K
  } fe_transmit_mode_t;
  
  typedef enum fe_bandwidth {
  	BANDWIDTH_8_MHZ,
  	BANDWIDTH_7_MHZ,
  	BANDWIDTH_6_MHZ,
! 	BANDWIDTH_AUTO
  } fe_bandwidth_t;
  
  
--- 176,195 ----
  	TRANSMISSION_MODE_2K,
  	TRANSMISSION_MODE_8K,
  	TRANSMISSION_MODE_AUTO,
! 	TRANSMISSION_MODE_4K,
! 	TRANSMISSION_MODE_1K,
! 	TRANSMISSION_MODE_16K,
! 	TRANSMISSION_MODE_32K,
  } fe_transmit_mode_t;
  
  typedef enum fe_bandwidth {
  	BANDWIDTH_8_MHZ,
  	BANDWIDTH_7_MHZ,
  	BANDWIDTH_6_MHZ,
! 	BANDWIDTH_AUTO,
! 	BANDWIDTH_5_MHZ,
! 	BANDWIDTH_10_MHZ,
! 	BANDWIDTH_1_712_MHZ,
  } fe_bandwidth_t;
  
  
*************** typedef enum fe_guard_interval {
*** 190,196 ****
  	GUARD_INTERVAL_1_16,
  	GUARD_INTERVAL_1_8,
  	GUARD_INTERVAL_1_4,
! 	GUARD_INTERVAL_AUTO
  } fe_guard_interval_t;
  
  
--- 198,207 ----
  	GUARD_INTERVAL_1_16,
  	GUARD_INTERVAL_1_8,
  	GUARD_INTERVAL_1_4,
! 	GUARD_INTERVAL_AUTO,
! 	GUARD_INTERVAL_1_128,
! 	GUARD_INTERVAL_19_128,
! 	GUARD_INTERVAL_19_256,
  } fe_guard_interval_t;
  
  
*************** struct dvb_frontend_event {
*** 302,310 ****
  
  #define DTV_ISDBT_LAYER_ENABLED	41
  
! #define DTV_ISDBS_TS_ID		42
  
! #define DTV_MAX_COMMAND				DTV_ISDBS_TS_ID
  
  typedef enum fe_pilot {
  	PILOT_ON,
--- 313,324 ----
  
  #define DTV_ISDBT_LAYER_ENABLED	41
  
! #define DTV_STREAM_ID		42
! #define DTV_ISDBS_TS_ID		DTV_STREAM_ID
! #define DTV_DVBT2_PLP_ID	43
! #define DTV_DVBS2_MIS_ID	DTV_DVBT2_PLP_ID
  
! #define DTV_MAX_COMMAND				DTV_DVBT2_PLP_ID
  
  typedef enum fe_pilot {
  	PILOT_ON,
*************** typedef enum fe_delivery_system {
*** 336,343 ****
--- 350,360 ----
  	SYS_DMBTH,
  	SYS_CMMB,
  	SYS_DAB,
+ 	SYS_DVBT2,
  } fe_delivery_system_t;
  
+ #define NO_STREAM_ID_FILTER	(~0U)
+ 
  struct dtv_cmds_h {
  	char	*name;		/* A display name for debugging purposes */
  
diff -crp linux-sh4-2.6.32.59_stm24_0211/include/linux/dvb/version.h linux-sh4-2.6.32.59_stm24_0211.i2s/include/linux/dvb/version.h
*** linux-sh4-2.6.32.59_stm24_0211/include/linux/dvb/version.h	2011-08-09 09:35:36.000000000 +0800
--- linux-sh4-2.6.32.59_stm24_0211.i2s/include/linux/dvb/version.h	2011-12-07 11:02:08.856831910 +0800
***************
*** 24,29 ****
  #define _DVBVERSION_H_
  
  #define DVB_API_VERSION 5
! #define DVB_API_VERSION_MINOR 1
  
  #endif /*_DVBVERSION_H_*/
--- 24,29 ----
  #define _DVBVERSION_H_
  
  #define DVB_API_VERSION 5
! #define DVB_API_VERSION_MINOR 3
  
  #endif /*_DVBVERSION_H_*/
diff -crp linux-sh4-2.6.32.59_stm24_0211/drivers/media/dvb/dvb-core/dvb_frontend.h linux-sh4-2.6.32.59_stm24_0211.i2s/drivers/media/dvb/dvb-core/dvb_frontend.h
*** linux-sh4-2.6.32.59_stm24_0211/drivers/media/dvb/dvb-core/dvb_frontend.h	2011-08-09 09:35:36.000000000 +0800
--- linux-sh4-2.6.32.59_stm24_0211.i2s/drivers/media/dvb/dvb-core/dvb_frontend.h	2011-12-07 11:02:08.856831910 +0800
*************** struct dtv_frontend_properties {
*** 356,363 ****
  	    u8			interleaving;
  	} layer[3];
  
! 	/* ISDB-T specifics */
! 	u32			isdbs_ts_id;
  };
  
  struct dvb_frontend {
--- 356,363 ----
  	    u8			interleaving;
  	} layer[3];
  
! 	/* Multistream specifics */
! 	u32			stream_id;
  };
  
  struct dvb_frontend {
diff -crp linux-sh4-2.6.32.59_stm24_0211/drivers/media/dvb/dvb-core/dvb_frontend.c linux-sh4-2.6.32.59_stm24_0211.i2s/drivers/media/dvb/dvb-core/dvb_frontend.c
*** linux-sh4-2.6.32.59_stm24_0211/drivers/media/dvb/dvb-core/dvb_frontend.c	2011-08-09 09:35:36.000000000 +0800
--- linux-sh4-2.6.32.59_stm24_0211.i2s/drivers/media/dvb/dvb-core/dvb_frontend.c	2011-12-07 11:02:08.856831910 +0800
*************** static int dvb_frontend_clear_cache(stru
*** 883,888 ****
--- 883,890 ----
  		fe->dtv_property_cache.layer[i].segment_count = -1;
  	}
  
+ 	fe->dtv_property_cache.stream_id = -1;
+ 
  	return 0;
  }
  
*************** static struct dtv_cmds_h dtv_cmds[] = {
*** 1032,1038 ****
  	_DTV_CMD(DTV_ISDBT_LAYERC_SEGMENT_COUNT, 0, 0),
  	_DTV_CMD(DTV_ISDBT_LAYERC_TIME_INTERLEAVING, 0, 0),
  
! 	_DTV_CMD(DTV_ISDBS_TS_ID, 1, 0),
  
  	/* Get */
  	[DTV_DISEQC_SLAVE_REPLY] = {
--- 1034,1041 ----
  	_DTV_CMD(DTV_ISDBT_LAYERC_SEGMENT_COUNT, 0, 0),
  	_DTV_CMD(DTV_ISDBT_LAYERC_TIME_INTERLEAVING, 0, 0),
  
! 	_DTV_CMD(DTV_STREAM_ID, 1, 0),
! 	_DTV_CMD(DTV_DVBT2_PLP_ID, 1, 0),
  
  	/* Get */
  	[DTV_DISEQC_SLAVE_REPLY] = {
*************** static void dtv_property_adv_params_sync
*** 1248,1257 ****
  		break;
  	}
  
! 	if(c->delivery_system == SYS_ISDBT) {
! 		/* Fake out a generic DVB-T request so we pass validation in the ioctl */
! 		p->frequency = c->frequency;
! 		p->inversion = c->inversion;
  		p->u.ofdm.constellation = QAM_AUTO;
  		p->u.ofdm.code_rate_HP = FEC_AUTO;
  		p->u.ofdm.code_rate_LP = FEC_AUTO;
--- 1251,1259 ----
  		break;
  	}
  
! 	/* Fake out a generic DVB-T request so we pass validation in the ioctl */
! 	if ((c->delivery_system == SYS_ISDBT) ||
! 	    (c->delivery_system == SYS_DVBT2)) {
  		p->u.ofdm.constellation = QAM_AUTO;
  		p->u.ofdm.code_rate_HP = FEC_AUTO;
  		p->u.ofdm.code_rate_LP = FEC_AUTO;
*************** static int dtv_property_process_get(stru
*** 1423,1430 ****
  	case DTV_ISDBT_LAYERC_TIME_INTERLEAVING:
  		tvp->u.data = fe->dtv_property_cache.layer[2].interleaving;
  		break;
! 	case DTV_ISDBS_TS_ID:
! 		tvp->u.data = fe->dtv_property_cache.isdbs_ts_id;
  		break;
  	default:
  		r = -1;
--- 1425,1435 ----
  	case DTV_ISDBT_LAYERC_TIME_INTERLEAVING:
  		tvp->u.data = fe->dtv_property_cache.layer[2].interleaving;
  		break;
! 	case DTV_STREAM_ID:
! 		tvp->u.data = fe->dtv_property_cache.stream_id;
! 		break;
! 	case DTV_DVBT2_PLP_ID:
! 		tvp->u.data = fe->dtv_property_cache.stream_id;
  		break;
  	default:
  		r = -1;
*************** static int dtv_property_process_set(stru
*** 1577,1584 ****
  	case DTV_ISDBT_LAYERC_TIME_INTERLEAVING:
  		fe->dtv_property_cache.layer[2].interleaving = tvp->u.data;
  		break;
! 	case DTV_ISDBS_TS_ID:
! 		fe->dtv_property_cache.isdbs_ts_id = tvp->u.data;
  		break;
  	default:
  		r = -1;
--- 1582,1592 ----
  	case DTV_ISDBT_LAYERC_TIME_INTERLEAVING:
  		fe->dtv_property_cache.layer[2].interleaving = tvp->u.data;
  		break;
! 	case DTV_STREAM_ID:
! 		fe->dtv_property_cache.stream_id = tvp->u.data;
! 		break;
! 	case DTV_DVBT2_PLP_ID:
! 		fe->dtv_property_cache.stream_id = tvp->u.data;
  		break;
  	default:
  		r = -1;
